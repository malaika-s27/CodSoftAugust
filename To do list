import tkinter as tk
from tkinter import messagebox

class ToDoListApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List App")
        
        self.task_list = []
        
        self.task_entry = tk.Entry(root, width=40, font=('Helvetica', 14))  # Increasing entry height and change font
        self.task_entry.pack(pady=15)  # Adjust padding
        
        self.add_button = tk.Button(root, text="Add Task", command=self.add_task, bg="blue", fg="white",width=25,height=2)
        self.add_button.pack()
        
        self.task_listbox = tk.Listbox(root, width=55)
        self.task_listbox.pack(pady=10)
        
        self.update_button = tk.Button(root, text="Update Task", command=self.update_task, bg="green", fg="white",width=25,height=2)
        self.update_button.pack()
        
        self.delete_button = tk.Button(root, text="Delete Task", command=self.delete_task, bg="red", fg="white",width=25,height=2)
        self.delete_button.pack()
        
        self.canvas = tk.Canvas(root, width=500, height=300, bg="peachpuff")
        self.canvas.pack()
        
        self.set_background()  # Add background feature
        #adding rectangles to the background 
    def set_background(self):
        colors = ["moccasin", "mistyrose",  "lavender", "lightpink","cornsilk"]
        for i in range(5):
            self.canvas.create_rectangle(0, i * 65, 500, (i + 1) * 65, fill=colors[i])
        
    def add_task(self):
        task = self.task_entry.get()
        if task:
            self.task_list.append(task)
            self.update_task_listbox()
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "Please enter a task.")
        
    def update_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            new_task = self.task_entry.get()
            if new_task:
                self.task_list[selected_index[0]] = new_task
                self.update_task_listbox()
                self.task_entry.delete(0, tk.END)
            else:
                messagebox.showwarning("Warning", "Please enter a task.")
        else:
            messagebox.showwarning("Warning", "Please select a task to update.")
        
    def delete_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            del self.task_list[selected_index[0]]
            self.update_task_listbox()
        else:
            messagebox.showwarning("Warning", "Please select a task to delete.")
        
    def update_task_listbox(self):
        self.task_listbox.delete(0, tk.END)
        for task in self.task_list:
            self.task_listbox.insert(tk.END, task)

if __name__ == "__main__":
    root = tk.Tk()
    app = ToDoListApp(root)
    root.mainloop()
